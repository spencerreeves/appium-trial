name: End to end integration tests for iOS App

on:
  push:
#    branches:
#      - main

jobs:
  e2e-ios:
    runs-on: macos-14

    environment: production

    steps:
      - name: ‚¨áÔ∏è Check out repository code
        uses: actions/checkout@v4

      # XCode and NPM already installed. See full list of preinstalled software here:
      # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Check available SDKs
        run: xcodebuild -showsdks

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build iOS app
        working-directory: ./ios
        run: xcodebuild build -workspace "Runner.xcworkspace" -scheme "Runner" -destination "platform=iOS Simulator,name=iPhone 15" -configuration Debug -derivedDataPath ../appium/apps -sdk iphonesimulator17.0

      - name: Create appium/apps directory
        working-directory: ./appium
        run: mkdir apps

      - name: Move Runner.app to base dir
        working-directory: ./appium/apps
        run: mv ./Build/Products/Debug-iphonesimulator/Runner.app .

      - name: üì¶ Install Appium
        run: npm i -g appium

      - name: Install iOS appium driver
        run: appium driver install xcuitest

      - name: Create report directory
        working-directory: ./appium
        run: mkdir -p reports/screenshots

      - name: Run tests
        working-directory: ./appium
        run: npm run ios.app

      - name: Zip report
        working-directory: ./appium
        run: zip -r reports.zip reports

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: reports.zip